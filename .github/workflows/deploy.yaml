name: PayTrack CI/CD

on:
  push:
    branches:
      - main
      - CICD-argoCD
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'charts/paytrack/**'

jobs:
  build-and-deploy:
    name: Build Docker Images & Trigger ArgoCD
    runs-on: self-hosted

    env:
      BACKEND_IMAGE: noor2205/paytrack-backend
      FRONTEND_IMAGE: noor2205/paytrack-frontend
      CHART_PATH: charts/paytrack

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get Short Commit ID (PowerShell-safe)
        shell: powershell
        run: |
          $shortCommit = $env:GITHUB_SHA.Substring(0,7)
          Add-Content -Path $env:GITHUB_ENV -Value "COMMIT_ID=$shortCommit"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Backend Image
        shell: powershell
        run: |
          docker build -t "${env:BACKEND_IMAGE}:${env:COMMIT_ID}" -f docker/Dockerfile.backend .
          docker push "${env:BACKEND_IMAGE}:${env:COMMIT_ID}"


      - name: Build & Push Frontend Image
        shell: powershell
        run: |
          docker build -t "${env:FRONTEND_IMAGE}:${env:COMMIT_ID}" -f docker/Dockerfile.frontend .
          docker push "${env:FRONTEND_IMAGE}:${env:COMMIT_ID}"

      - name: Update values.yaml with new tag
        shell: powershell
        run: |
          (Get-Content "$env:CHART_PATH\values.yaml") -replace 'tag: .*', "tag: $env:COMMIT_ID" | Set-Content "$env:CHART_PATH\values.yaml"

      - name: Commit updated values.yaml
        uses: EndBug/add-and-commit@v9
        with:
          message: "chore: update image tag"
          add: "${{ env.CHART_PATH }}/values.yaml"
          push: true
          github_token: ${{ secrets.TOKEN_GITHUB }}

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd && sudo mv argocd /usr/local/bin/argocd

      - name: Trigger ArgoCD Sync
        run: |
          argocd login paytrack-helm.local --insecure --username admin --password ${{ secrets.ARGOCD_PASSWORD }} --grpc-web
          argocd app sync paytrack --prune
